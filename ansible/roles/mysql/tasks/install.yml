---
# Retrieve the current hostname, because {{ ansible_hostname }} still contains the old name
- name: Capture current hostname
  shell: hostname
  changed_when: false
  register: current_hostname

- name: Install MySQL Packages
  become: yes
  apt: pkg={{ item }} state=latest
  with_items:
    - mysql-server
    - mysql-client
    - python-mysqldb

- name: Enable public access to the MySQL service
  become: yes
  lineinfile:
    dest: /etc/mysql/my.cnf
    state: absent
    regexp: "bind-address"
  when: mysql.public
  register: mysql_server_public_access_on

- name: Disable public access to the MySQL service
  become: yes
  lineinfile:
    dest: /etc/mysql/my.cnf
    state: present
    regexp: "^bind-address"
    line: "bind-address = 127.0.0.1"
    insertafter: '\[mysqld\]'
  when: not mysql.public
  register: mysql_server_public_access_off

- name: Ensure MySQL service running
  become: yes
  service: name=mysql state=started
  register: mysql_server_status

- name: Restart MySQL if necessary
  become: yes
  service:
    name: mysql
    state: restarted
  when: >
    not mysql_server_status.changed
      and
    (
      true in
        [
          mysql_server_public_access_on.changed,
          mysql_server_public_access_off.changed
        ]
    )

- name: Ensure MySQL service is enabled
  become: yes
  service: name=mysql enabled=yes

- name: Update root password for all root accounts
  mysql_user: name=root host={{ item }} check_implicit_admin=yes password={{ mysql.root_password }} login_user=root login_password={{ mysql.root_password }}
  with_items:
    - "{{ current_hostname.stdout | lower }}"
    - 127.0.0.1
    - ::1
    - localhost

- name: Create databases
  mysql_db: name={{ mysql.database }} state=present login_user=root login_password={{ mysql.root_password }}

- name: Import dump
  mysql_db: name={{ mysql.database }} state=import login_user=root login_password={{ mysql.root_password }} target=/vagrant/{{ mysql.dump }}
  when: mysql.dump

- name: Ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent login_user=root login_password={{ mysql.root_password }}
  with_items:
    - localhost
    - "{{ current_hostname.stdout | lower }}"

- name: Create users
  mysql_user: name={{ mysql.user }} password={{ mysql.password }} priv={{ mysql.database }}.*:ALL state=present login_user=root login_password={{ mysql.root_password }}

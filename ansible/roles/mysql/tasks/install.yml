---
# Retrieve the current hostname, because {{ ansible_hostname }} still contains the old name
- shell: hostname
  register: current_hostname

- name: Ensure mysql upstream repository package is downloaded
  get_url:
    dest: /tmp/mysql-apt-config.deb
    url: "https://repo.mysql.com/mysql-apt-config_0.8.7-1_all.deb"
    checksum: "sha256:9a15eb95ec359aac3eebf5b85b2719d45e7975d0de337100d771f7c0d5c95ede"
    timeout: 60
  register: result
  until: result is success
  retries: 5
  delay: 1
  when: '"5.7" in mysql.version'

- name: Ensure mysql upstream repository package is configured
  become: yes
  debconf:
    name: mysql-apt-config
    question: "mysql-apt-config/{{ item.question }}"
    value: "{{ item.value }}"
    vtype: "{{ item.vtype | default ('select') }}"
  with_items:
    - question: repo-distro
      value: "ubuntu"
    - question: repo-codename
      value: "trusty"
    - question: select-server
      value: "mysql-5.7"
  when: '"5.7" in mysql.version'

- name: Ensure mysql upstream repository is installed
  become: yes
  apt:
    deb: /tmp/mysql-apt-config.deb
  when: '"5.7" in mysql.version'

- name: Ensure the key for the mysql repositories is up to date
  become: yes
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 5072E1F5
    state: present
  when: '"5.7" in mysql.version'

- name: Update apt cache
  become: yes
  apt:
    update_cache: yes
  when: '"5.7" in mysql.version'

- name: Install MySQL Packages
  become: yes
  apt:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - mysql-server
    - mysql-client
    - python-mysqldb
  register: mysql_installation_result

- name: Ensure MySQL service running
  become: yes
  service: name=mysql state=started enabled=yes

- name: Set root user password for 5.5
  # If .my.cnf already exists, this will cause an mysql-root-password update.
  mysql_user:
    name: root
    host: "localhost"
    check_implicit_admin: yes
    login_user: root
    password: "{{ mysql.root_password}}"
  when: '"5.5" in mysql.version'

- name: Set root user password for 5.7
  become: yes
  command: >
    mysql -u root mysql
    --execute "UPDATE mysql.user SET authentication_string=PASSWORD('{{ mysql.root_password}}'),plugin='mysql_native_password' WHERE user='root' AND Host='localhost'; flush privileges;"
  when: '"5.7" in mysql.version and mysql_installation_result is changed'

- name: Create .my.cnf
  become: yes
  template:
    src: "{{role_path}}/files/client.my.cnf.j2"
    dest: "{{ansible_env.HOME}}/.my.cnf"
    owner: vagrant
    group: vagrant
    mode: 0600

- name: Create databases
  mysql_db: name={{ mysql.database }} state=present login_user=root login_password={{ mysql.root_password }}

- name: Import dump
  mysql_db: name={{ mysql.database }} state=import login_user=root login_password={{ mysql.root_password }} target=/vagrant/{{ mysql.dump }}
  when: mysql.dump
  register: mysql_dump_imported

- name: Ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent login_user=root login_password={{ mysql.root_password }}
  with_items:
    - localhost
    - "{{ current_hostname.stdout | lower }}"

- name: Create users
  mysql_user: name={{ mysql.user }} password={{ mysql.password }} priv={{ mysql.database }}.*:ALL state=present login_user=root login_password={{ mysql.root_password }}

- name: Transfer mysql to in memory storage
  include: in_memory.yml
  when: mysql.in_memory
